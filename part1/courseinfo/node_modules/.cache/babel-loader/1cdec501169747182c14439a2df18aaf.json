{"ast":null,"code":"var _jsxFileName = \"/home/sebasbocaccio/Desktop/FullStack/Full-Stack-Learning/part1/courseinfo/src/App.js\",\n    _s = $RefreshSig$();\n\n/* I wasn't sure whether \n\nimport React, { useState } from 'react'\n\n\n\nconst Button = ({ handleClick, text }) => (\n  <button onClick={handleClick}>\n    {text}\n  </button>\n)\n\nconst Statistic = ({text, value}) => {\n\treturn (\n\t\t<tr>\n\t\t<td> {text} </td>\n\t\t<td>{value}</td>\n\t\t</tr>\n\t)\n\n}\nconst Statistics = ({good,neutral,bad}) => {\n   \n  // No feedback given\n  if ((good+neutral+bad) === 0){\n    return (\n      <div>\n        <h1>statistics</h1>\n        <div>No feedback given</div>\n      </div>\n    )\n  }\n \n else{ return ( \n <div>\n   <h1>  Statistics</h1>\n  <table>\n    <tbody>\n      <Statistic text = {'good'}  value = {good} />\n      <Statistic text = {'neutral'} value = {neutral} />  \n      <Statistic text = {'bad'} value = {bad} />  \n      <Statistic text = {'all'} value = {bad+neutral+good} />  \n      <Statistic text=  {\"average\"} value = {(((good * 1) + (bad * -1)))/(good+neutral+bad)} /> \n      <Statistic text = {\"positive\"}  value = {((good) / (bad+good + neutral)*100).toFixed(2) + '%' } /> \n    </tbody>\n  </table>\n\n  </div>\n   )\n }  \n}\n\n\nconst App = () => {\n  // save clicks of each button to its own state\n   \n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n\n  const handleGoodClick = () => {\n    \n    setGood(good + 1)\n  }\n  const handleNeutralClick = () => {\n    \n    setNeutral(neutral + 1 )\n  }\n  const handleBadClick = () => {\n    setBad(bad + 1)\n  }\n\n\n\n  return (\n    <div>\n         <h1>Give feedback</h1>\n      <div>\n        <h1>\n        <Button handleClick={handleGoodClick} text='good' />\n       <Button handleClick={handleNeutralClick} text='neutral' />  \n       <Button handleClick={handleBadClick} text='bad' />\n       </h1>\n      </div>\n      <Statistics good ={good} bad= {bad} neutral = {neutral} />\n        <div>\n        <h1>Anecdotes</h1>\n        </div>\n      </div>\n      \n\n    )\n}\n\nexport default App\n/*\nexport default App\n\n*/\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Button = ({\n  handleClick,\n  text\n}) => /*#__PURE__*/_jsxDEV(\"button\", {\n  onClick: handleClick,\n  children: text\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 108,\n  columnNumber: 3\n}, this);\n\n_c = Button;\n\nconst App = () => {\n  _s();\n\n  const anecdotes = ['If it hurts, do it more often', 'Adding manpower to a late software project makes it later!', 'The first 90 percent of the code accounts for the first 90 percent of the development time...The remaining 10 percent of the code accounts for the other 90 percent of the development time.', 'Any fool can write code that a computer can understand. Good programmers write code that humans can understand.', 'Premature optimization is the root of all evil.', 'Debugging is twice as hard as writing the code in the first place. Therefore, if you write the code as cleverly as possible, you are, by definition, not smart enough to debug it.'];\n  const votes = Array(anecdotes.length).fill(0);\n  const [selected, setSelected] = useState(0);\n  const [allVotes, setVotes] = useState(votes);\n\n  const changeAnecdote = () => {\n    setSelected(Math.floor(Math.random() * anecdotes.length));\n  };\n\n  const voteAnecdote = () => {\n    const copy = { ...allVotes\n    }; // increment the property 2 value by one\n\n    copy[selected] += 1;\n    setVotes(copy);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [anecdotes[selected], \"  has \", allVotes[selected], \" votes\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        handleClick: changeAnecdote,\n        text: \"next anecdote\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        handleClick: voteAnecdote,\n        text: \"vote\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Anecdote with most votes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 7\n      }, this), allVotes[indexOfMax(allVotes)]]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"qmwplXJu5KrMubD5O5XCkUyR2p4=\");\n\n_c2 = App;\n\nfunction indexOfMax(arr) {\n  if (arr.length === 0) {\n    return -1;\n  }\n\n  var max = arr[0];\n  var maxIndex = 0;\n\n  for (var i = 1; i < arr.length; i++) {\n    if (arr[i] > max) {\n      maxIndex = i;\n      max = arr[i];\n    }\n  }\n\n  return maxIndex;\n}\n\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["/home/sebasbocaccio/Desktop/FullStack/Full-Stack-Learning/part1/courseinfo/src/App.js"],"names":["React","useState","Button","handleClick","text","App","anecdotes","votes","Array","length","fill","selected","setSelected","allVotes","setVotes","changeAnecdote","Math","floor","random","voteAnecdote","copy","indexOfMax","arr","max","maxIndex","i"],"mappings":";;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAGA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA,WAAF;AAAeC,EAAAA;AAAf,CAAD,kBACb;AAAQ,EAAA,OAAO,EAAED,WAAjB;AAAA,YACGC;AADH;AAAA;AAAA;AAAA;AAAA,QADF;;KAAMF,M;;AAMN,MAAMG,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAMC,SAAS,GAAG,CAChB,+BADgB,EAEhB,4DAFgB,EAGhB,8LAHgB,EAIhB,iHAJgB,EAKhB,iDALgB,EAMhB,oLANgB,CAAlB;AASA,QAAMC,KAAK,GAAGC,KAAK,CAACF,SAAS,CAACG,MAAX,CAAL,CAAwBC,IAAxB,CAA6B,CAA7B,CAAd;AAEA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,CAAD,CAAxC;AACA,QAAM,CAACY,QAAD,EAAWC,QAAX,IAAuBb,QAAQ,CAACM,KAAD,CAArC;;AACA,QAAMQ,cAAc,GAAG,MAAM;AAE3BH,IAAAA,WAAW,CAACI,IAAI,CAACC,KAAL,CAAYD,IAAI,CAACE,MAAL,KAAiBZ,SAAS,CAACG,MAAvC,CAAD,CAAX;AACD,GAHD;;AAKA,QAAMU,YAAY,GAAG,MAAM;AAEzB,UAAMC,IAAI,GAAG,EAAE,GAAGP;AAAL,KAAb,CAFyB,CAGzB;;AACAO,IAAAA,IAAI,CAACT,QAAD,CAAJ,IAAkB,CAAlB;AACAG,IAAAA,QAAQ,CAACM,IAAD,CAAR;AAED,GAPD;;AAUA,sBACE;AAAA,4BACC;AAAA,iBACCd,SAAS,CAACK,QAAD,CADV,YAC4BE,QAAQ,CAACF,QAAD,CADpC;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,eAIE;AAAA,8BAEA,QAAC,MAAD;AAAQ,QAAA,WAAW,EAAEI,cAArB;AAAqC,QAAA,IAAI,EAAC;AAA1C;AAAA;AAAA;AAAA;AAAA,cAFA,eAGA,QAAC,MAAD;AAAQ,QAAA,WAAW,EAAEI,YAArB;AAAmC,QAAA,IAAI,EAAC;AAAxC;AAAA;AAAA;AAAA;AAAA,cAHA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAUE;AAAA,8BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,EAGAN,QAAQ,CAACQ,UAAU,CAACR,QAAD,CAAX,CAHR;AAAA;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CA/CD;;GAAMR,G;;MAAAA,G;;AAkDN,SAASgB,UAAT,CAAoBC,GAApB,EAAyB;AACvB,MAAIA,GAAG,CAACb,MAAJ,KAAe,CAAnB,EAAsB;AAClB,WAAO,CAAC,CAAR;AACH;;AAED,MAAIc,GAAG,GAAGD,GAAG,CAAC,CAAD,CAAb;AACA,MAAIE,QAAQ,GAAG,CAAf;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,GAAG,CAACb,MAAxB,EAAgCgB,CAAC,EAAjC,EAAqC;AACjC,QAAIH,GAAG,CAACG,CAAD,CAAH,GAASF,GAAb,EAAkB;AACdC,MAAAA,QAAQ,GAAGC,CAAX;AACAF,MAAAA,GAAG,GAAGD,GAAG,CAACG,CAAD,CAAT;AACH;AACJ;;AAED,SAAOD,QAAP;AACD;;AAED,eAAenB,GAAf","sourcesContent":["\n/* I wasn't sure whether \n\nimport React, { useState } from 'react'\n\n\n\nconst Button = ({ handleClick, text }) => (\n  <button onClick={handleClick}>\n    {text}\n  </button>\n)\n\nconst Statistic = ({text, value}) => {\n\treturn (\n\t\t<tr>\n\t\t<td> {text} </td>\n\t\t<td>{value}</td>\n\t\t</tr>\n\t)\n\n}\nconst Statistics = ({good,neutral,bad}) => {\n   \n  // No feedback given\n  if ((good+neutral+bad) === 0){\n    return (\n      <div>\n        <h1>statistics</h1>\n        <div>No feedback given</div>\n      </div>\n    )\n  }\n \n else{ return ( \n <div>\n   <h1>  Statistics</h1>\n  <table>\n    <tbody>\n      <Statistic text = {'good'}  value = {good} />\n      <Statistic text = {'neutral'} value = {neutral} />  \n      <Statistic text = {'bad'} value = {bad} />  \n      <Statistic text = {'all'} value = {bad+neutral+good} />  \n      <Statistic text=  {\"average\"} value = {(((good * 1) + (bad * -1)))/(good+neutral+bad)} /> \n      <Statistic text = {\"positive\"}  value = {((good) / (bad+good + neutral)*100).toFixed(2) + '%' } /> \n    </tbody>\n  </table>\n\n  </div>\n   )\n }  \n}\n\n\nconst App = () => {\n  // save clicks of each button to its own state\n   \n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n\n  const handleGoodClick = () => {\n    \n    setGood(good + 1)\n  }\n  const handleNeutralClick = () => {\n    \n    setNeutral(neutral + 1 )\n  }\n  const handleBadClick = () => {\n    setBad(bad + 1)\n  }\n\n\n\n  return (\n    <div>\n         <h1>Give feedback</h1>\n      <div>\n        <h1>\n        <Button handleClick={handleGoodClick} text='good' />\n       <Button handleClick={handleNeutralClick} text='neutral' />  \n       <Button handleClick={handleBadClick} text='bad' />\n       </h1>\n      </div>\n      <Statistics good ={good} bad= {bad} neutral = {neutral} />\n        <div>\n        <h1>Anecdotes</h1>\n        </div>\n      </div>\n      \n\n    )\n}\n\nexport default App\n/*\nexport default App\n\n*/\n\n\n\nimport React, { useState } from 'react'\n\n\nconst Button = ({ handleClick, text }) => (\n  <button onClick={handleClick}>\n    {text}\n  </button>\n)\n\nconst App = () => {\n  const anecdotes = [\n    'If it hurts, do it more often',\n    'Adding manpower to a late software project makes it later!',\n    'The first 90 percent of the code accounts for the first 90 percent of the development time...The remaining 10 percent of the code accounts for the other 90 percent of the development time.',\n    'Any fool can write code that a computer can understand. Good programmers write code that humans can understand.',\n    'Premature optimization is the root of all evil.',\n    'Debugging is twice as hard as writing the code in the first place. Therefore, if you write the code as cleverly as possible, you are, by definition, not smart enough to debug it.'\n]\n   \n  const votes = Array(anecdotes.length).fill(0)\n\n  const [selected, setSelected] = useState(0)\n  const [allVotes, setVotes] = useState(votes)\n  const changeAnecdote = () => {\n    \n    setSelected(Math.floor((Math.random() * (anecdotes.length))))\n  }\n  \n  const voteAnecdote = () => {\n    \n    const copy = { ...allVotes }\n    // increment the property 2 value by one\n    copy[selected] += 1\n    setVotes(copy)   \n\n  }\n  \n\n  return (\n    <div>\n     <div>\n     {anecdotes[selected]}  has {allVotes[selected]} votes\n     </div>\n      <div>\n    \n      <Button handleClick={changeAnecdote} text='next anecdote' />\n      <Button handleClick={voteAnecdote} text='vote' />\n      </div>\n      \n      <div>\n      <h1>Anecdote with most votes</h1>\n\n     {allVotes[indexOfMax(allVotes)]}\n     </div>\n       </div>\n  )\n}\n\n\nfunction indexOfMax(arr) {\n  if (arr.length === 0) {\n      return -1;\n  }\n\n  var max = arr[0];\n  var maxIndex = 0;\n\n  for (var i = 1; i < arr.length; i++) {\n      if (arr[i] > max) {\n          maxIndex = i;\n          max = arr[i];\n      }\n  }\n\n  return maxIndex;\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}