{"ast":null,"code":"var _jsxFileName = \"/home/sebasbocaccio/Desktop/FullStack/Full-Stack-Learning/part1/courseinfo/src/App.js\";\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Button = ({\n  handleClick,\n  text\n}) => /*#__PURE__*/_jsxDEV(\"button\", {\n  onClick: handleClick,\n  children: text\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 9,\n  columnNumber: 3\n}, this);\n\n_c = Button;\n\nconst Statistics = ({\n  good,\n  neutral,\n  bad\n}) => {\n  var _s = $RefreshSig$();\n\n  // No feedback given\n  if (good + neutral + bad == 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"body\", {\n        children: \"No feedback given\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"body\", {\n        children: [\" good \", good, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"body\", {\n        children: [\" neutral \", neutral]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"body\", {\n        children: [\" bad \", bad]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"body\", {\n        children: [\" all \", good + neutral + bad]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"body\", {\n        children: [\" average \", (good * 1 + bad * -1) / (good + neutral + bad)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"body\", {\n        children: [\" positive \", good / (bad + good + neutral)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 2\n    }, this);\n  }\n\n  const App = () => {\n    _s();\n\n    // save clicks of each button to its own state\n    const [good, setGood] = useState(0);\n    const [neutral, setNeutral] = useState(0);\n    const [bad, setBad] = useState(0);\n\n    const handleGoodClick = () => {\n      setGood(good + 1);\n    };\n\n    const handleNeutralClick = () => {\n      setNeutral(neutral + 1);\n    };\n\n    const handleBadClick = () => {\n      setBad(bad + 1);\n    };\n  };\n\n  _s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Give feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          handleClick: handleGoodClick,\n          text: \"good\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          handleClick: handleNeutralClick,\n          text: \"neutral\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          handleClick: handleBadClick,\n          text: \"bad\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 8\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n      good: good,\n      bad: bad,\n      neutral: neutral\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = Statistics;\nexport default App;\n/*\nexport default App\n\n\n\n//*-----------------------------------------\n/*\nimport React, { useState } from 'react'\n\nconst History = (props) => {\n  console.log(props)\n \n  if (props.allClicks.length === 0) {\n    return (\n      <div>\n        the app is used by pressing the buttons\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      button press history: {props.allClicks.join(' ')}\n    </div>\n  )\n}\n\nconst Button = ({ handleClick, text }) => (\n  <button onClick={handleClick}>\n  \n    {text}\n  </button>\n)\n\nconst App = () => {\n  const [left, setLeft] = useState(0)\n  const [right, setRight] = useState(0)\n  const [allClicks, setAll] = useState([])\n\n  const handleLeftClick = () => {\n    setAll(allClicks.concat('L'))\n    setLeft(left + 1)\n  }\n\n  const handleRightClick = () => {\n    setAll(allClicks.concat('R'))\n    setRight(right + 1)\n  }\n\n  return (\n    <div>\n      {left}\n      <Button handleClick={handleLeftClick} text='left' />\n      <Button handleClick={handleRightClick} text='right' />\n      {right}\n      <History allClicks={allClicks} />\n    </div>\n  )\n}\nexport default App*/\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"Statistics\");","map":{"version":3,"sources":["/home/sebasbocaccio/Desktop/FullStack/Full-Stack-Learning/part1/courseinfo/src/App.js"],"names":["React","useState","Button","handleClick","text","Statistics","good","neutral","bad","App","setGood","setNeutral","setBad","handleGoodClick","handleNeutralClick","handleBadClick"],"mappings":"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","sourcesContent":["\n\n\nimport React, { useState } from 'react'\n\n\n\nconst Button = ({ handleClick, text }) => (\n  <button onClick={handleClick}>\n    {text}\n  </button>\n)\n\n\nconst Statistics = ({good,neutral,bad}) => {\n   \n  // No feedback given\n  if ((good+neutral+bad) == 0){\n    return (\n      <div>\n        <body>No feedback given</body>\n      </div>\n    )\n  }\n \n else{ return ( \n <div>\n\n  <body> good {good} </body>\n  <body> neutral {neutral}</body>\n  <body> bad {bad}</body>\n  <body> all {good+neutral+bad}</body>\n  <body> average {(((good * 1) + (bad * -1)))/(good+neutral+bad)}</body>\n  <body> positive {(good) / (bad+good + neutral)}</body>\n  </div>\n\n   )\n }  \n\n\nconst App = () => {\n  // save clicks of each button to its own state\n   \n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n\n  const handleGoodClick = () => {\n    \n    setGood(good + 1)\n  }\n  const handleNeutralClick = () => {\n    \n    setNeutral(neutral + 1 )\n  }\n  const handleBadClick = () => {\n    setBad(bad + 1)\n  }\n\n}\n\n  return (\n    <div>\n         <h1>Give feedback</h1>\n      <div>\n        <h1>\n        <Button handleClick={handleGoodClick} text='good' />\n       <Button handleClick={handleNeutralClick} text='neutral' />\n       \n       <Button handleClick={handleBadClick} text='bad' />\n       </h1>\n      </div>\n      <h1>statistics</h1>\n      <Statistics good ={good} bad= {bad} neutral = {neutral} />\n    \n    </div>\n    )\n}\n\nexport default App\n/*\nexport default App\n\n\n\n//*-----------------------------------------\n/*\nimport React, { useState } from 'react'\n\nconst History = (props) => {\n  console.log(props)\n \n  if (props.allClicks.length === 0) {\n    return (\n      <div>\n        the app is used by pressing the buttons\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      button press history: {props.allClicks.join(' ')}\n    </div>\n  )\n}\n\nconst Button = ({ handleClick, text }) => (\n  <button onClick={handleClick}>\n  \n    {text}\n  </button>\n)\n\nconst App = () => {\n  const [left, setLeft] = useState(0)\n  const [right, setRight] = useState(0)\n  const [allClicks, setAll] = useState([])\n\n  const handleLeftClick = () => {\n    setAll(allClicks.concat('L'))\n    setLeft(left + 1)\n  }\n\n  const handleRightClick = () => {\n    setAll(allClicks.concat('R'))\n    setRight(right + 1)\n  }\n\n  return (\n    <div>\n      {left}\n      <Button handleClick={handleLeftClick} text='left' />\n      <Button handleClick={handleRightClick} text='right' />\n      {right}\n      <History allClicks={allClicks} />\n    </div>\n  )\n}\nexport default App*/"]},"metadata":{},"sourceType":"module"}