{"ast":null,"code":"var _jsxFileName = \"/home/sebasbocaccio/Desktop/FullStack/Full-Stack-Learning/part1/unicafe/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Button = ({\n  handleClick,\n  text\n}) => /*#__PURE__*/_jsxDEV(\"button\", {\n  onClick: handleClick,\n  children: text\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 4,\n  columnNumber: 3\n}, this);\n\n_c = Button;\n\nconst Statistic = ({\n  text,\n  value\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      children: [\" \", text, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 3\n  }, this);\n};\n\n_c2 = Statistic;\n\nconst Statistics = ({\n  good,\n  neutral,\n  bad\n}) => {\n  // No feedback given\n  if (good + neutral + bad === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"statistics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"No feedback given\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"  Statistics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [/*#__PURE__*/_jsxDEV(Statistic, {\n            text: 'good',\n            value: good\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Statistic, {\n            text: 'neutral',\n            value: neutral\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Statistic, {\n            text: 'bad',\n            value: bad\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Statistic, {\n            text: 'all',\n            value: bad + neutral + good\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Statistic, {\n            text: \"average\",\n            value: (good * 1 + bad * -1) / (good + neutral + bad)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Statistic, {\n            text: \"positive\",\n            value: (good / (bad + good + neutral) * 100).toFixed(2) + '%'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 2\n    }, this);\n  }\n};\n\n_c3 = Statistics;\n\nconst App = () => {\n  _s();\n\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const handleGoodClick = () => {\n    setGood(good + 1);\n  };\n\n  const handleNeutralClick = () => {\n    setNeutral(neutral + 1);\n  };\n\n  const handleBadClick = () => {\n    setBad(bad + 1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Give feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          handleClick: handleGoodClick,\n          text: \"good\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          handleClick: handleNeutralClick,\n          text: \"neutral\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          handleClick: handleBadClick,\n          text: \"bad\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 8\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n      good: good,\n      bad: bad,\n      neutral: neutral\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Anecdotes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n\n_c4 = App;\nexport default App;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"Statistic\");\n$RefreshReg$(_c3, \"Statistics\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"sources":["/home/sebasbocaccio/Desktop/FullStack/Full-Stack-Learning/part1/unicafe/src/App.js"],"names":["React","useState","Button","handleClick","text","Statistic","value","Statistics","good","neutral","bad","toFixed","App","setGood","setNeutral","setBad","handleGoodClick","handleNeutralClick","handleBadClick"],"mappings":"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","sourcesContent":["\nimport React, { useState } from 'react'\nconst Button = ({ handleClick, text }) => (\n  <button onClick={handleClick}>\n    {text}\n  </button>\n)\nconst Statistic = ({text, value}) => {\n\treturn (\n\t\t<tr>\n\t\t<td> {text} </td>\n\t\t<td>{value}</td>\n\t\t</tr>\n\t)\n}\nconst Statistics = ({good,neutral,bad}) => {\n   \n  // No feedback given\n  if ((good+neutral+bad) === 0){\n    return (\n      <div>\n        <h1>statistics</h1>\n        <div>No feedback given</div>\n      </div>\n    )\n  }\n \n else{ return ( \n <div>\n   <h1>  Statistics</h1>\n  <table>\n    <tbody>\n      <Statistic text = {'good'}  value = {good} />\n      <Statistic text = {'neutral'} value = {neutral} />  \n      <Statistic text = {'bad'} value = {bad} />  \n      <Statistic text = {'all'} value = {bad+neutral+good} />  \n      <Statistic text=  {\"average\"} value = {(((good * 1) + (bad * -1)))/(good+neutral+bad)} /> \n      <Statistic text = {\"positive\"}  value = {((good) / (bad+good + neutral)*100).toFixed(2) + '%' } /> \n    </tbody>\n  </table>\n  </div>\n   )\n }  \n}\nconst App = () => {\n  // save clicks of each button to its own state\n   \n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n  const handleGoodClick = () => {\n    \n    setGood(good + 1)\n  }\n  const handleNeutralClick = () => {\n    \n    setNeutral(neutral + 1 )\n  }\n  const handleBadClick = () => {\n    setBad(bad + 1)\n  }\n  return (\n    <div>\n         <h1>Give feedback</h1>\n      <div>\n        <h1>\n        <Button handleClick={handleGoodClick} text='good' />\n       <Button handleClick={handleNeutralClick} text='neutral' />  \n       <Button handleClick={handleBadClick} text='bad' />\n       </h1>\n      </div>\n      <Statistics good ={good} bad= {bad} neutral = {neutral} />\n        <div>\n        <h1>Anecdotes</h1>\n        </div>\n      </div>\n      \n    )\n}\nexport default App\n"]},"metadata":{},"sourceType":"module"}